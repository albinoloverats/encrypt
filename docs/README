encrypt - 201110                                       16th October 2011

We're on some sort of a roll here; there's a new release of encrypt.  It
fixes a couple of minor bugs---checksums are now correctly computed and,
therefore, correctly verified upon decryption---as well as introducing a
few new behind-the-scenes features:  the internal structure of encrypted
data is split into blocks, which will be necessary in the future,  as we
introduce data compression (planned for the next release). The other new
feature is the ability to notify the user if  a newer version of encrypt
is available for download.

That's all for now, although we'll be back soon with more updates,  such
as compression, and anything else that comes our way...

The encrypt Development Team


Copyright/Licencing:
  All components of encrypt are freely available under one free software
  licence or another. The cryptographic libraries (glibc and gnu-crypto)
  are both available  under the terms of the GNU General Public License;
  GTK and  GDK are available  under the terms of the  GNU Lesser General
  Public License.  The Android File Dialog is available under the  terms
  of the FreeBSD License.

  The icon  used by  encrypt is a modification  taken  from  the Crystal
  Clear icon set,  which makes  it available  under the terms of the GNU
  Lesser General Public License.

  Copies of all of the above licences should have been distributed along
  with encrypt, in source or binary form.


Prerequisites:
  Desktop implementation:
    - GTK (and all of its requirements: GDK/Cairo/etc)---version 2.24 or
      later
    - libgcrypt cryptographic library
    - pthread library

  Android implementation:
    gnu-crypto
    Android File Dialog - http://code.google.com/p/android-file-dialog/


Build/Installation instructions:
  For most,  installing encrypt will pull in all the required libraries,
  either  through your systems  package management system,  or if you're
  on  MS Windows,  the  installer  includes all  the  necessary  runtime
  libraries.  If you  intend to  build from source  you will require the
  development packages too.

  On GNU/Linux Systems:
    Simply:
      $ make -f Makefile
      # make -f Makefile install

    To build with the GTK GUI:
      $ make -f Makefile gui
      $ make -f Makefile install

    Eventually, you may need the following:
      $ make -f Makefile clean
      $ make -f Makefile distclean
      # make -f Makefile uninstall

  On MS Systems:
    It's all done for you  (Using Dev-C++)---if you wish to compile from
    source  yourself,  this shouldn't  be too  much  of a  problem using
    Dev-C++ (just ask if you need help). The NSIS script will then allow
    you to  build the installer  (or you can just  copy the  binaries to
    wherever and go from there).

  For Android:
    Import the Eclipse/Android project into  Eclipse and build using the
    standard Android development tools.
