0000000: 2f2a 0a20 2a20 656e 6372 7970 7420 7e20  /*. * encrypt ~ 
0000010: 6120 7369 6d70 6c65 2c20 6d6f 6475 6c61  a simple, modula
0000020: 722c 2028 6d75 6c74 692d 4f53 2c29 2065  r, (multi-OS,) e
0000030: 6e63 7279 7074 696f 6e20 7574 696c 6974  ncryption utilit
0000040: 790a 202a 2043 6f70 7972 6967 6874 2028  y. * Copyright (
0000050: 6329 2032 3030 352d 3230 3131 2c20 616c  c) 2005-2011, al
0000060: 6269 6e6f 6c6f 7665 7261 7473 207e 2053  binoloverats ~ S
0000070: 6f66 7477 6172 6520 4465 7665 6c6f 706d  oftware Developm
0000080: 656e 740a 202a 2065 6d61 696c 3a20 656e  ent. * email: en
0000090: 6372 7970 7440 616c 6269 6e6f 6c6f 7665  crypt@albinolove
00000a0: 7261 7473 2e6e 6574 0a20 2a0a 202a 2054  rats.net. *. * T
00000b0: 6869 7320 7072 6f67 7261 6d20 6973 2066  his program is f
00000c0: 7265 6520 736f 6674 7761 7265 3a20 796f  ree software: yo
00000d0: 7520 6361 6e20 7265 6469 7374 7269 6275  u can redistribu
00000e0: 7465 2069 7420 616e 642f 6f72 206d 6f64  te it and/or mod
00000f0: 6966 790a 202a 2069 7420 756e 6465 7220  ify. * it under 
0000100: 7468 6520 7465 726d 7320 6f66 2074 6865  the terms of the
0000110: 2047 4e55 2047 656e 6572 616c 2050 7562   GNU General Pub
0000120: 6c69 6320 4c69 6365 6e73 6520 6173 2070  lic License as p
0000130: 7562 6c69 7368 6564 2062 790a 202a 2074  ublished by. * t
0000140: 6865 2046 7265 6520 536f 6674 7761 7265  he Free Software
0000150: 2046 6f75 6e64 6174 696f 6e2c 2065 6974   Foundation, eit
0000160: 6865 7220 7665 7273 696f 6e20 3320 6f66  her version 3 of
0000170: 2074 6865 204c 6963 656e 7365 2c20 6f72   the License, or
0000180: 0a20 2a20 2861 7420 796f 7572 206f 7074  . * (at your opt
0000190: 696f 6e29 2061 6e79 206c 6174 6572 2076  ion) any later v
00001a0: 6572 7369 6f6e 2e0a 202a 0a20 2a20 5468  ersion.. *. * Th
00001b0: 6973 2070 726f 6772 616d 2069 7320 6469  is program is di
00001c0: 7374 7269 6275 7465 6420 696e 2074 6865  stributed in the
00001d0: 2068 6f70 6520 7468 6174 2069 7420 7769   hope that it wi
00001e0: 6c6c 2062 6520 7573 6566 756c 2c0a 202a  ll be useful,. *
00001f0: 2062 7574 2057 4954 484f 5554 2041 4e59   but WITHOUT ANY
0000200: 2057 4152 5241 4e54 593b 2077 6974 686f   WARRANTY; witho
0000210: 7574 2065 7665 6e20 7468 6520 696d 706c  ut even the impl
0000220: 6965 6420 7761 7272 616e 7479 206f 660a  ied warranty of.
0000230: 202a 204d 4552 4348 414e 5441 4249 4c49   * MERCHANTABILI
0000240: 5459 206f 7220 4649 544e 4553 5320 464f  TY or FITNESS FO
0000250: 5220 4120 5041 5254 4943 554c 4152 2050  R A PARTICULAR P
0000260: 5552 504f 5345 2e20 2053 6565 2074 6865  URPOSE.  See the
0000270: 0a20 2a20 474e 5520 4765 6e65 7261 6c20  . * GNU General 
0000280: 5075 626c 6963 204c 6963 656e 7365 2066  Public License f
0000290: 6f72 206d 6f72 6520 6465 7461 696c 732e  or more details.
00002a0: 0a20 2a0a 202a 2059 6f75 2073 686f 756c  . *. * You shoul
00002b0: 6420 6861 7665 2072 6563 6569 7665 6420  d have received 
00002c0: 6120 636f 7079 206f 6620 7468 6520 474e  a copy of the GN
00002d0: 5520 4765 6e65 7261 6c20 5075 626c 6963  U General Public
00002e0: 204c 6963 656e 7365 0a20 2a20 616c 6f6e   License. * alon
00002f0: 6720 7769 7468 2074 6869 7320 7072 6f67  g with this prog
0000300: 7261 6d2e 2020 4966 206e 6f74 2c20 7365  ram.  If not, se
0000310: 6520 3c68 7474 703a 2f2f 7777 772e 676e  e <http://www.gn
0000320: 752e 6f72 672f 6c69 6365 6e73 6573 2f3e  u.org/licenses/>
0000330: 2e0a 202a 0a20 2a2f 0a0a 2369 6e63 6c75  .. *. */..#inclu
0000340: 6465 203c 7374 6469 6f2e 683e 0a23 696e  de <stdio.h>.#in
0000350: 636c 7564 6520 3c73 7472 696e 672e 683e  clude <string.h>
0000360: 0a23 696e 636c 7564 6520 3c73 7464 6c69  .#include <stdli
0000370: 622e 683e 0a23 696e 636c 7564 6520 3c73  b.h>.#include <s
0000380: 7464 626f 6f6c 2e68 3e0a 2369 6e63 6c75  tdbool.h>.#inclu
0000390: 6465 203c 6663 6e74 6c2e 683e 0a23 696e  de <fcntl.h>.#in
00003a0: 636c 7564 6520 3c75 6e69 7374 642e 683e  clude <unistd.h>
00003b0: 0a0a 2369 6e63 6c75 6465 203c 6572 726e  ..#include <errn
00003c0: 6f2e 683e 0a23 696e 636c 7564 6520 3c73  o.h>.#include <s
00003d0: 7973 2f73 7461 742e 683e 0a23 696e 636c  ys/stat.h>.#incl
00003e0: 7564 6520 3c70 7468 7265 6164 2e68 3e0a  ude <pthread.h>.
00003f0: 0a23 696e 636c 7564 6520 2265 6e63 7279  .#include "encry
0000400: 7074 2e68 220a 2369 6e63 6c75 6465 2022  pt.h".#include "
0000410: 6775 692e 6822 0a0a 2369 6e63 6c75 6465  gui.h"..#include
0000420: 2022 6d61 696e 2e68 220a 0a23 696e 636c   "main.h"..#incl
0000430: 7564 6520 2263 6f6d 6d6f 6e2f 636f 6d6d  ude "common/comm
0000440: 6f6e 2e68 220a 2369 6e63 6c75 6465 2022  on.h".#include "
0000450: 636f 6d6d 6f6e 2f6c 6f67 6769 6e67 2e68  common/logging.h
0000460: 220a 0a73 7461 7469 6320 766f 6964 2063  "..static void c
0000470: 6865 636b 5f65 6e61 626c 655f 656e 6372  heck_enable_encr
0000480: 7970 745f 6275 7474 6f6e 2867 746b 5f77  ypt_button(gtk_w
0000490: 6964 6765 7473 5f74 202a 6461 7461 293b  idgets_t *data);
00004a0: 0a0a 7374 6174 6963 2076 6f69 6420 2a62  ..static void *b
00004b0: 675f 7468 7265 6164 5f67 7569 2876 6f69  g_thread_gui(voi
00004c0: 6420 2a6e 293b 0a0a 7374 6174 6963 2062  d *n);..static b
00004d0: 6f6f 6c20 656e 6372 7970 7469 6e67 203d  ool encrypting =
00004e0: 2074 7275 653b 0a0a 475f 4d4f 4455 4c45   true;..G_MODULE
00004f0: 5f45 5850 4f52 5420 6762 6f6f 6c65 616e  _EXPORT gboolean
0000500: 2066 696c 655f 6368 6f6f 7365 725f 6361   file_chooser_ca
0000510: 6c6c 6261 636b 2847 746b 5769 6467 6574  llback(GtkWidget
0000520: 202a 7769 6467 6574 2c20 6774 6b5f 7769   *widget, gtk_wi
0000530: 6467 6574 735f 7420 2a64 6174 6129 0a7b  dgets_t *data).{
0000540: 0a20 2020 2067 746b 5f77 6964 6765 745f  .    gtk_widget_
0000550: 7365 745f 7365 6e73 6974 6976 6528 6461  set_sensitive(da
0000560: 7461 2d3e 6b65 795f 636f 6d62 6f2c 2046  ta->key_combo, F
0000570: 414c 5345 293b 0a20 2020 2067 746b 5f77  ALSE);.    gtk_w
0000580: 6964 6765 745f 7365 745f 7365 6e73 6974  idget_set_sensit
0000590: 6976 6528 6461 7461 2d3e 6372 7970 746f  ive(data->crypto
00005a0: 5f63 6f6d 626f 2c20 4641 4c53 4529 3b0a  _combo, FALSE);.
00005b0: 2020 2020 6774 6b5f 7769 6467 6574 5f73      gtk_widget_s
00005c0: 6574 5f73 656e 7369 7469 7665 2864 6174  et_sensitive(dat
00005d0: 612d 3e68 6173 685f 636f 6d62 6f2c 2046  a->hash_combo, F
00005e0: 414c 5345 293b 0a20 2020 202f 2a0a 2020  ALSE);.    /*.  
00005f0: 2020 202a 2063 6865 636b 2074 6865 2073     * check the s
0000600: 6f75 7263 6520 6669 6c65 2065 7869 7374  ource file exist
0000610: 7320 2861 6e64 2069 7320 6120 6669 6c65  s (and is a file
0000620: 290a 2020 2020 202a 2f0a 2020 2020 6368  ).     */.    ch
0000630: 6172 202a 666e 616d 6520 3d20 6774 6b5f  ar *fname = gtk_
0000640: 6669 6c65 5f63 686f 6f73 6572 5f67 6574  file_chooser_get
0000650: 5f66 696c 656e 616d 6528 2847 746b 4669  _filename((GtkFi
0000660: 6c65 4368 6f6f 7365 7220 2a29 6461 7461  leChooser *)data
0000670: 2d3e 6669 6c65 5f63 686f 6f73 6572 293b  ->file_chooser);
0000680: 0a20 2020 2069 6620 2821 666e 616d 6529  .    if (!fname)
0000690: 0a20 2020 2020 2020 7265 7475 726e 2046  .       return F
00006a0: 414c 5345 3b0a 2020 2020 2f2a 0a20 2020  ALSE;.    /*.   
00006b0: 2020 2a20 7175 6963 6b6c 7920 7365 6520    * quickly see 
00006c0: 6966 2074 6865 2066 696c 6520 6973 2065  if the file is e
00006d0: 6e63 7279 7074 6564 2061 6c72 6561 6479  ncrypted already
00006e0: 0a20 2020 2020 2a2f 0a20 2020 2069 6e74  .     */.    int
00006f0: 3634 5f74 2066 203d 206f 7065 6e28 666e  64_t f = open(fn
0000700: 616d 652c 204f 5f52 444f 4e4c 5920 7c20  ame, O_RDONLY | 
0000710: 4f5f 4249 4e41 5259 207c 2046 5f52 444c  O_BINARY | F_RDL
0000720: 434b 2c20 535f 4952 5553 5220 7c20 535f  CK, S_IRUSR | S_
0000730: 4957 5553 5229 3b0a 2020 2020 6966 2028  IWUSR);.    if (
0000740: 6620 3c20 3029 0a20 2020 2020 2020 2072  f < 0).        r
0000750: 6574 7572 6e20 4641 4c53 453b 0a20 2020  eturn FALSE;.   
0000760: 2063 6861 7220 2a63 203d 204e 554c 4c2c   char *c = NULL,
0000770: 202a 6820 3d20 4e55 4c4c 3b0a 2020 2020   *h = NULL;.    
0000780: 6966 2028 6669 6c65 5f65 6e63 7279 7074  if (file_encrypt
0000790: 6564 2866 2c20 2663 2c20 2668 2929 0a20  ed(f, &c, &h)). 
00007a0: 2020 207b 0a20 2020 2020 2020 2065 6e63     {.        enc
00007b0: 7279 7074 696e 6720 3d20 6661 6c73 653b  rypting = false;
00007c0: 0a20 2020 2020 2020 2061 7574 6f5f 7365  .        auto_se
00007d0: 6c65 6374 5f61 6c67 6f72 6974 686d 7328  lect_algorithms(
00007e0: 6461 7461 2c20 632c 2068 293b 0a20 2020  data, c, h);.   
00007f0: 207d 0a20 2020 2063 6c6f 7365 2866 293b   }.    close(f);
0000800: 0a20 2020 2067 746b 5f62 7574 746f 6e5f  .    gtk_button_
0000810: 7365 745f 6c61 6265 6c28 2847 746b 4275  set_label((GtkBu
0000820: 7474 6f6e 202a 2964 6174 612d 3e65 6e63  tton *)data->enc
0000830: 7279 7074 5f62 7574 746f 6e2c 2065 6e63  rypt_button, enc
0000840: 7279 7074 696e 6720 3f20 4c41 4245 4c5f  rypting ? LABEL_
0000850: 454e 4352 5950 5420 3a20 4c41 4245 4c5f  ENCRYPT : LABEL_
0000860: 4445 4352 5950 5429 3b0a 2020 2020 6368  DECRYPT);.    ch
0000870: 6172 202a 6f64 6972 203d 2067 746b 5f66  ar *odir = gtk_f
0000880: 696c 655f 6368 6f6f 7365 725f 6765 745f  ile_chooser_get_
0000890: 6669 6c65 6e61 6d65 2828 4774 6b46 696c  filename((GtkFil
00008a0: 6543 686f 6f73 6572 202a 2964 6174 612d  eChooser *)data-
00008b0: 3e6f 7574 5f66 696c 655f 6368 6f6f 7365  >out_file_choose
00008c0: 7229 3b0a 2020 2020 6966 2028 216f 6469  r);.    if (!odi
00008d0: 7229 0a20 2020 2020 2020 2072 6574 7572  r).        retur
00008e0: 6e20 4641 4c53 453b 0a20 2020 202f 2a0a  n FALSE;.    /*.
00008f0: 2020 2020 202a 2069 6620 7468 6520 6465       * if the de
0000900: 7374 696e 6174 696f 6e20 6578 6973 7473  stination exists
0000910: 2c20 6974 2068 6173 2074 6f20 6265 2061  , it has to be a
0000920: 2072 6567 756c 6172 2066 696c 650a 2020   regular file.  
0000930: 2020 202a 2f0a 2020 2020 6368 6172 202a     */.    char *
0000940: 6f6e 616d 6520 3d20 2863 6861 7220 2a29  oname = (char *)
0000950: 6774 6b5f 656e 7472 795f 6765 745f 7465  gtk_entry_get_te
0000960: 7874 2828 4774 6b45 6e74 7279 202a 2964  xt((GtkEntry *)d
0000970: 6174 612d 3e6f 7574 5f66 696c 655f 656e  ata->out_file_en
0000980: 7472 7929 3b0a 2020 2020 6966 2028 216f  try);.    if (!o
0000990: 6e61 6d65 207c 7c20 2173 7472 6c65 6e28  name || !strlen(
00009a0: 6f6e 616d 6529 290a 2020 2020 2020 2020  oname)).        
00009b0: 7265 7475 726e 2046 414c 5345 3b0a 2020  return FALSE;.  
00009c0: 2020 6368 6172 202a 6f75 745f 6669 6c65    char *out_file
00009d0: 203d 204e 554c 4c3b 0a20 2020 2061 7370   = NULL;.    asp
00009e0: 7269 6e74 6628 266f 7574 5f66 696c 652c  rintf(&out_file,
00009f0: 2022 2573 2f25 7322 2c20 6f64 6972 2c20   "%s/%s", odir, 
0000a00: 6f6e 616d 6529 3b0a 2020 2020 7374 7275  oname);.    stru
0000a10: 6374 2073 7461 7420 696e 666f 3b0a 2020  ct stat info;.  
0000a20: 2020 6966 2028 7374 6174 286f 7574 5f66    if (stat(out_f
0000a30: 696c 652c 2026 696e 666f 2920 3d3d 2030  ile, &info) == 0
0000a40: 2026 2620 2153 5f49 5352 4547 2869 6e66   && !S_ISREG(inf
0000a50: 6f2e 7374 5f6d 6f64 6529 290a 2020 2020  o.st_mode)).    
0000a60: 7b0a 2020 2020 2020 2020 6672 6565 286f  {.        free(o
0000a70: 7574 5f66 696c 6529 3b0a 2020 2020 2020  ut_file);.      
0000a80: 2020 7265 7475 726e 2046 414c 5345 3b0a    return FALSE;.
0000a90: 2020 2020 7d0a 2020 2020 6672 6565 286f      }.    free(o
0000aa0: 7574 5f66 696c 6529 3b0a 0a20 2020 2069  ut_file);..    i
0000ab0: 6620 2865 6e63 7279 7074 696e 6729 0a20  f (encrypting). 
0000ac0: 2020 207b 0a20 2020 2020 2020 2067 746b     {.        gtk
0000ad0: 5f77 6964 6765 745f 7365 745f 7365 6e73  _widget_set_sens
0000ae0: 6974 6976 6528 6461 7461 2d3e 6372 7970  itive(data->cryp
0000af0: 746f 5f63 6f6d 626f 2c20 5452 5545 293b  to_combo, TRUE);
0000b00: 0a20 2020 2020 2020 2067 746b 5f77 6964  .        gtk_wid
0000b10: 6765 745f 7365 745f 7365 6e73 6974 6976  get_set_sensitiv
0000b20: 6528 6461 7461 2d3e 6861 7368 5f63 6f6d  e(data->hash_com
0000b30: 626f 2c20 5452 5545 293b 0a20 2020 207d  bo, TRUE);.    }
0000b40: 0a20 2020 2067 746b 5f77 6964 6765 745f  .    gtk_widget_
0000b50: 7365 745f 7365 6e73 6974 6976 6528 6461  set_sensitive(da
0000b60: 7461 2d3e 6b65 795f 636f 6d62 6f2c 2054  ta->key_combo, T
0000b70: 5255 4529 3b0a 0a20 2020 2072 6574 7572  RUE);..    retur
0000b80: 6e20 5452 5545 3b0a 7d0a 0a65 7874 6572  n TRUE;.}..exter
0000b90: 6e20 766f 6964 2061 7574 6f5f 7365 6c65  n void auto_sele
0000ba0: 6374 5f61 6c67 6f72 6974 686d 7328 6774  ct_algorithms(gt
0000bb0: 6b5f 7769 6467 6574 735f 7420 2a64 6174  k_widgets_t *dat
0000bc0: 612c 2063 6861 7220 2a63 6970 6865 722c  a, char *cipher,
0000bd0: 2063 6861 7220 2a68 6173 6829 0a7b 0a20   char *hash).{. 
0000be0: 2020 206c 6973 745f 7420 2a63 6970 6865     list_t *ciphe
0000bf0: 7273 203d 2067 6574 5f61 6c67 6f72 6974  rs = get_algorit
0000c00: 686d 735f 6372 7970 7428 293b 0a20 2020  hms_crypt();.   
0000c10: 2075 696e 7436 345f 7420 6363 203d 206c   uint64_t cc = l
0000c20: 6973 745f 7369 7a65 2863 6970 6865 7273  ist_size(ciphers
0000c30: 293b 0a20 2020 2075 6e73 6967 6e65 6420  );.    unsigned 
0000c40: 736c 6374 645f 6369 7068 6572 203d 2030  slctd_cipher = 0
0000c50: 3b0a 2020 2020 666f 7220 2875 6e73 6967  ;.    for (unsig
0000c60: 6e65 6420 6920 3d20 303b 2069 203c 2063  ned i = 0; i < c
0000c70: 633b 2069 2b2b 290a 2020 2020 7b0a 2020  c; i++).    {.  
0000c80: 2020 2020 2020 6368 6172 202a 6374 203d        char *ct =
0000c90: 2028 6368 6172 202a 296c 6973 745f 6765   (char *)list_ge
0000ca0: 7428 6369 7068 6572 732c 2069 293b 0a20  t(ciphers, i);. 
0000cb0: 2020 2020 2020 2069 6620 2863 6970 6865         if (ciphe
0000cc0: 7220 2626 2021 7374 7263 6173 6563 6d70  r && !strcasecmp
0000cd0: 2863 742c 2063 6970 6865 7229 290a 2020  (ct, cipher)).  
0000ce0: 2020 2020 2020 7b0a 2020 2020 2020 2020        {.        
0000cf0: 2020 2020 736c 6374 645f 6369 7068 6572      slctd_cipher
0000d00: 203d 2069 202b 2031 3b0a 2020 2020 2020   = i + 1;.      
0000d10: 2020 2020 2020 6c6f 675f 6d65 7373 6167        log_messag
0000d20: 6528 4c4f 475f 5645 5242 4f53 452c 2022  e(LOG_VERBOSE, "
0000d30: 616c 676f 7269 7468 6d20 2573 2069 7320  algorithm %s is 
0000d40: 2564 2069 6e20 7468 6520 6c69 7374 222c  %d in the list",
0000d50: 2063 6970 6865 722c 2073 6c63 7464 5f63   cipher, slctd_c
0000d60: 6970 6865 7229 3b0a 2020 2020 2020 2020  ipher);.        
0000d70: 7d0a 2020 2020 2020 2020 6774 6b5f 636f  }.        gtk_co
0000d80: 6d62 6f5f 626f 785f 7465 7874 5f61 7070  mbo_box_text_app
0000d90: 656e 645f 7465 7874 2828 4774 6b43 6f6d  end_text((GtkCom
0000da0: 626f 426f 7854 6578 7420 2a29 6461 7461  boBoxText *)data
0000db0: 2d3e 6372 7970 746f 5f63 6f6d 626f 2c20  ->crypto_combo, 
0000dc0: 6374 293b 0a20 2020 207d 0a20 2020 2067  ct);.    }.    g
0000dd0: 746b 5f63 6f6d 626f 5f62 6f78 5f73 6574  tk_combo_box_set
0000de0: 5f61 6374 6976 6528 2847 746b 436f 6d62  _active((GtkComb
0000df0: 6f42 6f78 202a 2964 6174 612d 3e63 7279  oBox *)data->cry
0000e00: 7074 6f5f 636f 6d62 6f2c 2073 6c63 7464  pto_combo, slctd
0000e10: 5f63 6970 6865 7229 3b0a 2020 2020 6c69  _cipher);.    li
0000e20: 7374 5f64 656c 6574 6528 2663 6970 6865  st_delete(&ciphe
0000e30: 7273 293b 0a0a 2020 2020 6c69 7374 5f74  rs);..    list_t
0000e40: 202a 6861 7368 6573 203d 2067 6574 5f61   *hashes = get_a
0000e50: 6c67 6f72 6974 686d 735f 6861 7368 2829  lgorithms_hash()
0000e60: 3b0a 2020 2020 7569 6e74 3634 5f74 2068  ;.    uint64_t h
0000e70: 6320 3d20 6c69 7374 5f73 697a 6528 6861  c = list_size(ha
0000e80: 7368 6573 293b 0a20 2020 2075 6e73 6967  shes);.    unsig
0000e90: 6e65 6420 736c 6374 645f 6861 7368 203d  ned slctd_hash =
0000ea0: 2030 3b0a 2020 2020 666f 7220 2875 6e73   0;.    for (uns
0000eb0: 6967 6e65 6420 2069 203d 2030 3b20 6920  igned  i = 0; i 
0000ec0: 3c20 6863 3b20 692b 2b29 0a20 2020 207b  < hc; i++).    {
0000ed0: 0a20 2020 2020 2020 2063 6861 7220 2a68  .        char *h
0000ee0: 7420 3d20 2863 6861 7220 2a29 6c69 7374  t = (char *)list
0000ef0: 5f67 6574 2868 6173 6865 732c 2069 293b  _get(hashes, i);
0000f00: 0a20 2020 2020 2020 2069 6620 2868 6173  .        if (has
0000f10: 6820 2626 2021 7374 7263 6173 6563 6d70  h && !strcasecmp
0000f20: 2868 742c 2068 6173 6829 290a 2020 2020  (ht, hash)).    
0000f30: 2020 2020 7b0a 2020 2020 2020 2020 2020      {.          
0000f40: 2020 736c 6374 645f 6861 7368 203d 2069    slctd_hash = i
0000f50: 202b 2031 3b0a 2020 2020 2020 2020 2020   + 1;.          
0000f60: 2020 6c6f 675f 6d65 7373 6167 6528 4c4f    log_message(LO
0000f70: 475f 5645 5242 4f53 452c 2022 616c 676f  G_VERBOSE, "algo
0000f80: 7269 7468 6d20 2573 2069 7320 2564 2069  rithm %s is %d i
0000f90: 6e20 7468 6520 6c69 7374 222c 2068 6173  n the list", has
0000fa0: 682c 2073 6c63 7464 5f68 6173 6829 3b0a  h, slctd_hash);.
0000fb0: 2020 2020 2020 2020 7d0a 2020 2020 2020          }.      
0000fc0: 2020 6774 6b5f 636f 6d62 6f5f 626f 785f    gtk_combo_box_
0000fd0: 7465 7874 5f61 7070 656e 645f 7465 7874  text_append_text
0000fe0: 2828 4774 6b43 6f6d 626f 426f 7854 6578  ((GtkComboBoxTex
0000ff0: 7420 2a29 6461 7461 2d3e 6861 7368 5f63  t *)data->hash_c
0001000: 6f6d 626f 2c20 6874 293b 0a20 2020 207d  ombo, ht);.    }
0001010: 0a20 2020 2067 746b 5f63 6f6d 626f 5f62  .    gtk_combo_b
0001020: 6f78 5f73 6574 5f61 6374 6976 6528 2847  ox_set_active((G
0001030: 746b 436f 6d62 6f42 6f78 202a 2964 6174  tkComboBox *)dat
0001040: 612d 3e68 6173 685f 636f 6d62 6f2c 2073  a->hash_combo, s
0001050: 6c63 7464 5f68 6173 6829 3b0a 2020 2020  lctd_hash);.    
0001060: 6c69 7374 5f64 656c 6574 6528 2668 6173  list_delete(&has
0001070: 6865 7329 3b0a 0a20 2020 2072 6574 7572  hes);..    retur
0001080: 6e3b 0a7d 0a0a 475f 4d4f 4455 4c45 5f45  n;.}..G_MODULE_E
0001090: 5850 4f52 5420 6762 6f6f 6c65 616e 2063  XPORT gboolean c
00010a0: 6970 6865 725f 636f 6d62 6f5f 6361 6c6c  ipher_combo_call
00010b0: 6261 636b 2847 746b 436f 6d62 6f42 6f78  back(GtkComboBox
00010c0: 202a 636f 6d62 6f5f 626f 782c 2067 746b   *combo_box, gtk
00010d0: 5f77 6964 6765 7473 5f74 202a 6461 7461  _widgets_t *data
00010e0: 290a 7b0a 2020 2020 6368 6563 6b5f 656e  ).{.    check_en
00010f0: 6162 6c65 5f65 6e63 7279 7074 5f62 7574  able_encrypt_but
0001100: 746f 6e28 6461 7461 293b 0a0a 2020 2020  ton(data);..    
0001110: 7265 7475 726e 2054 5255 453b 0a7d 0a0a  return TRUE;.}..
0001120: 475f 4d4f 4455 4c45 5f45 5850 4f52 5420  G_MODULE_EXPORT 
0001130: 6762 6f6f 6c65 616e 2068 6173 685f 636f  gboolean hash_co
0001140: 6d62 6f5f 6361 6c6c 6261 636b 2847 746b  mbo_callback(Gtk
0001150: 436f 6d62 6f42 6f78 202a 636f 6d62 6f5f  ComboBox *combo_
0001160: 626f 782c 2067 746b 5f77 6964 6765 7473  box, gtk_widgets
0001170: 5f74 202a 6461 7461 290a 7b0a 2020 2020  _t *data).{.    
0001180: 6368 6563 6b5f 656e 6162 6c65 5f65 6e63  check_enable_enc
0001190: 7279 7074 5f62 7574 746f 6e28 6461 7461  rypt_button(data
00011a0: 293b 0a0a 2020 2020 7265 7475 726e 2054  );..    return T
00011b0: 5255 453b 0a7d 0a0a 475f 4d4f 4455 4c45  RUE;.}..G_MODULE
00011c0: 5f45 5850 4f52 5420 6762 6f6f 6c65 616e  _EXPORT gboolean
00011d0: 206b 6579 5f63 6f6d 626f 5f63 616c 6c62   key_combo_callb
00011e0: 6163 6b28 4774 6b43 6f6d 626f 426f 7820  ack(GtkComboBox 
00011f0: 2a63 6f6d 626f 5f62 6f78 2c20 6774 6b5f  *combo_box, gtk_
0001200: 7769 6467 6574 735f 7420 2a64 6174 6129  widgets_t *data)
0001210: 0a7b 0a20 2020 2073 7769 7463 6820 2867  .{.    switch (g
0001220: 746b 5f63 6f6d 626f 5f62 6f78 5f67 6574  tk_combo_box_get
0001230: 5f61 6374 6976 6528 636f 6d62 6f5f 626f  _active(combo_bo
0001240: 7829 290a 2020 2020 7b0a 2020 2020 2020  x)).    {.      
0001250: 2020 6361 7365 204b 4559 4649 4c45 3a0a    case KEYFILE:.
0001260: 2020 2020 2020 2020 2020 2020 6774 6b5f              gtk_
0001270: 7769 6467 6574 5f73 6574 5f73 656e 7369  widget_set_sensi
0001280: 7469 7665 2864 6174 612d 3e70 6173 7377  tive(data->passw
0001290: 6f72 645f 656e 7472 792c 2046 414c 5345  ord_entry, FALSE
00012a0: 293b 0a20 2020 2020 2020 2020 2020 2067  );.            g
00012b0: 746b 5f77 6964 6765 745f 7365 745f 7365  tk_widget_set_se
00012c0: 6e73 6974 6976 6528 6461 7461 2d3e 6b65  nsitive(data->ke
00012d0: 795f 6368 6f6f 7365 722c 2054 5255 4529  y_chooser, TRUE)
00012e0: 3b0a 2020 2020 2020 2020 2020 2020 6774  ;.            gt
00012f0: 6b5f 7769 6467 6574 5f73 686f 7728 6461  k_widget_show(da
0001300: 7461 2d3e 6b65 795f 6368 6f6f 7365 7229  ta->key_chooser)
0001310: 3b0a 2020 2020 2020 2020 2020 2020 6774  ;.            gt
0001320: 6b5f 7769 6467 6574 5f68 6964 6528 6461  k_widget_hide(da
0001330: 7461 2d3e 7061 7373 776f 7264 5f65 6e74  ta->password_ent
0001340: 7279 293b 0a20 2020 2020 2020 2020 2020  ry);.           
0001350: 2062 7265 616b 3b0a 0a20 2020 2020 2020   break;..       
0001360: 2063 6173 6520 5041 5353 574f 5244 3a0a   case PASSWORD:.
0001370: 2020 2020 2020 2020 2020 2020 6774 6b5f              gtk_
0001380: 7769 6467 6574 5f73 6574 5f73 656e 7369  widget_set_sensi
0001390: 7469 7665 2864 6174 612d 3e6b 6579 5f63  tive(data->key_c
00013a0: 686f 6f73 6572 2c20 4641 4c53 4529 3b0a  hooser, FALSE);.
00013b0: 2020 2020 2020 2020 2020 2020 6774 6b5f              gtk_
00013c0: 7769 6467 6574 5f73 6574 5f73 656e 7369  widget_set_sensi
00013d0: 7469 7665 2864 6174 612d 3e70 6173 7377  tive(data->passw
00013e0: 6f72 645f 656e 7472 792c 2054 5255 4529  ord_entry, TRUE)
00013f0: 3b0a 2020 2020 2020 2020 2020 2020 6774  ;.            gt
0001400: 6b5f 7769 6467 6574 5f73 686f 7728 6461  k_widget_show(da
0001410: 7461 2d3e 7061 7373 776f 7264 5f65 6e74  ta->password_ent
0001420: 7279 293b 0a20 2020 2020 2020 2020 2020  ry);.           
0001430: 2067 746b 5f77 6964 6765 745f 6869 6465   gtk_widget_hide
0001440: 2864 6174 612d 3e6b 6579 5f63 686f 6f73  (data->key_choos
0001450: 6572 293b 0a20 2020 2020 2020 2020 2020  er);.           
0001460: 2062 7265 616b 3b0a 0a20 2020 2020 2020   break;..       
0001470: 2064 6566 6175 6c74 3a0a 2020 2020 2020   default:.      
0001480: 2020 2020 2020 6774 6b5f 7769 6467 6574        gtk_widget
0001490: 5f73 6574 5f73 656e 7369 7469 7665 2864  _set_sensitive(d
00014a0: 6174 612d 3e70 6173 7377 6f72 645f 656e  ata->password_en
00014b0: 7472 792c 2046 414c 5345 293b 0a20 2020  try, FALSE);.   
00014c0: 2020 2020 2020 2020 2067 746b 5f77 6964           gtk_wid
00014d0: 6765 745f 7365 745f 7365 6e73 6974 6976  get_set_sensitiv
00014e0: 6528 6461 7461 2d3e 6b65 795f 6368 6f6f  e(data->key_choo
00014f0: 7365 722c 2046 414c 5345 293b 0a20 2020  ser, FALSE);.   
0001500: 207d 0a20 2020 2063 6865 636b 5f65 6e61   }.    check_ena
0001510: 626c 655f 656e 6372 7970 745f 6275 7474  ble_encrypt_butt
0001520: 6f6e 2864 6174 6129 3b0a 0a20 2020 2072  on(data);..    r
0001530: 6574 7572 6e20 5452 5545 3b0a 7d0a 0a47  eturn TRUE;.}..G
0001540: 5f4d 4f44 554c 455f 4558 504f 5254 2067  _MODULE_EXPORT g
0001550: 626f 6f6c 6561 6e20 7061 7373 776f 7264  boolean password
0001560: 5f65 6e74 7279 5f63 616c 6c62 6163 6b28  _entry_callback(
0001570: 4774 6b43 6f6d 626f 426f 7820 2a70 6173  GtkComboBox *pas
0001580: 7377 6f72 645f 656e 7472 792c 2067 746b  sword_entry, gtk
0001590: 5f77 6964 6765 7473 5f74 202a 6461 7461  _widgets_t *data
00015a0: 290a 7b0a 2020 2020 6368 6563 6b5f 656e  ).{.    check_en
00015b0: 6162 6c65 5f65 6e63 7279 7074 5f62 7574  able_encrypt_but
00015c0: 746f 6e28 6461 7461 293b 0a0a 2020 2020  ton(data);..    
00015d0: 7265 7475 726e 2054 5255 453b 0a7d 0a0a  return TRUE;.}..
00015e0: 475f 4d4f 4455 4c45 5f45 5850 4f52 5420  G_MODULE_EXPORT 
00015f0: 6762 6f6f 6c65 616e 206b 6579 5f63 686f  gboolean key_cho
0001600: 6f73 6572 5f63 616c 6c62 6163 6b28 4774  oser_callback(Gt
0001610: 6b46 696c 6543 686f 6f73 6572 202a 6669  kFileChooser *fi
0001620: 6c65 5f63 686f 6f73 6572 2c20 6774 6b5f  le_chooser, gtk_
0001630: 7769 6467 6574 735f 7420 2a64 6174 6129  widgets_t *data)
0001640: 0a7b 0a20 2020 2063 6865 636b 5f65 6e61  .{.    check_ena
0001650: 626c 655f 656e 6372 7970 745f 6275 7474  ble_encrypt_butt
0001660: 6f6e 2864 6174 6129 3b0a 0a20 2020 2072  on(data);..    r
0001670: 6574 7572 6e20 5452 5545 3b0a 7d0a 0a47  eturn TRUE;.}..G
0001680: 5f4d 4f44 554c 455f 4558 504f 5254 2067  _MODULE_EXPORT g
0001690: 626f 6f6c 6561 6e20 6f6e 5f65 6e63 7279  boolean on_encry
00016a0: 7074 5f62 7574 746f 6e5f 636c 6963 6b65  pt_button_clicke
00016b0: 6428 4774 6b42 7574 746f 6e20 2a62 7574  d(GtkButton *but
00016c0: 746f 6e2c 2067 746b 5f77 6964 6765 7473  ton, gtk_widgets
00016d0: 5f74 202a 6461 7461 290a 7b0a 2020 2020  _t *data).{.    
00016e0: 6c6f 675f 6d65 7373 6167 6528 4c4f 475f  log_message(LOG_
00016f0: 4445 4255 472c 2022 7368 6f77 2070 726f  DEBUG, "show pro
0001700: 6772 6573 7320 6469 616c 6f67 2229 3b0a  gress dialog");.
0001710: 2020 2020 6774 6b5f 7769 6467 6574 5f73      gtk_widget_s
0001720: 686f 7728 6461 7461 2d3e 7072 6f67 7265  how(data->progre
0001730: 7373 5f64 6961 6c6f 6729 3b0a 2020 2020  ss_dialog);.    
0001740: 2f2f 6774 6b5f 6d61 696e 5f69 7465 7261  //gtk_main_itera
0001750: 7469 6f6e 2829 3b0a 0a20 2020 2070 7468  tion();..    pth
0001760: 7265 6164 5f74 2062 6774 203d 2075 695f  read_t bgt = ui_
0001770: 7468 7265 6164 5f69 6e69 7469 616c 6973  thread_initialis
0001780: 6528 6267 5f74 6872 6561 645f 6775 692c  e(bg_thread_gui,
0001790: 2064 6174 6129 3b0a 0a20 2020 206c 6f67   data);..    log
00017a0: 5f6d 6573 7361 6765 284c 4f47 5f44 4542  _message(LOG_DEB
00017b0: 5547 2c20 2272 6573 6574 2063 616e 6365  UG, "reset cance
00017c0: 6c2f 636c 6f73 6520 6275 7474 6f6e 7322  l/close buttons"
00017d0: 293b 0a20 2020 2067 746b 5f77 6964 6765  );.    gtk_widge
00017e0: 745f 7365 745f 7365 6e73 6974 6976 6528  t_set_sensitive(
00017f0: 6461 7461 2d3e 7072 6f67 7265 7373 5f63  data->progress_c
0001800: 616e 6365 6c5f 6275 7474 6f6e 2c20 5452  ancel_button, TR
0001810: 5545 293b 0a20 2020 2067 746b 5f77 6964  UE);.    gtk_wid
0001820: 6765 745f 7368 6f77 2864 6174 612d 3e70  get_show(data->p
0001830: 726f 6772 6573 735f 6361 6e63 656c 5f62  rogress_cancel_b
0001840: 7574 746f 6e29 3b0a 2020 2020 6774 6b5f  utton);.    gtk_
0001850: 7769 6467 6574 5f73 6574 5f73 656e 7369  widget_set_sensi
0001860: 7469 7665 2864 6174 612d 3e70 726f 6772  tive(data->progr
0001870: 6573 735f 636c 6f73 655f 6275 7474 6f6e  ess_close_button
0001880: 2c20 4641 4c53 4529 3b0a 2020 2020 6774  , FALSE);.    gt
0001890: 6b5f 7769 6467 6574 5f68 6964 6528 6461  k_widget_hide(da
00018a0: 7461 2d3e 7072 6f67 7265 7373 5f63 6c6f  ta->progress_clo
00018b0: 7365 5f62 7574 746f 6e29 3b0a 0a20 2020  se_button);..   
00018c0: 206c 6f67 5f6d 6573 7361 6765 284c 4f47   log_message(LOG
00018d0: 5f44 4542 5547 2c20 2272 6573 6574 2070  _DEBUG, "reset p
00018e0: 726f 6772 6573 7320 6261 7222 293b 0a20  rogress bar");. 
00018f0: 2020 2067 746b 5f70 726f 6772 6573 735f     gtk_progress_
0001900: 6261 725f 7365 745f 6672 6163 7469 6f6e  bar_set_fraction
0001910: 2828 4774 6b50 726f 6772 6573 7342 6172  ((GtkProgressBar
0001920: 202a 2964 6174 612d 3e70 726f 6772 6573   *)data->progres
0001930: 735f 6261 722c 2030 2e30 293b 0a20 2020  s_bar, 0.0);.   
0001940: 2067 746b 5f70 726f 6772 6573 735f 6261   gtk_progress_ba
0001950: 725f 7365 745f 7465 7874 2828 4774 6b50  r_set_text((GtkP
0001960: 726f 6772 6573 7342 6172 202a 2964 6174  rogressBar *)dat
0001970: 612d 3e70 726f 6772 6573 735f 6261 722c  a->progress_bar,
0001980: 2022 2229 3b0a 0a20 2020 2075 696e 7436   "");..    uint6
0001990: 345f 7420 737a 203d 2030 3b0a 0a20 2020  4_t sz = 0;..   
00019a0: 206c 6f67 5f6d 6573 7361 6765 284c 4f47   log_message(LOG
00019b0: 5f44 4542 5547 2c20 2275 7064 6174 6520  _DEBUG, "update 
00019c0: 7072 6f67 7265 7373 2062 6172 2069 6e20  progress bar in 
00019d0: 6c6f 6f70 2229 3b0a 2020 2020 7374 6174  loop");.    stat
00019e0: 7573 5f65 2073 7461 7475 7320 3d20 5052  us_e status = PR
00019f0: 4550 524f 4345 5353 494e 473b 0a20 2020  EPROCESSING;.   
0001a00: 2064 6f0a 2020 2020 7b0a 2020 2020 2020   do.    {.      
0001a10: 2020 6966 2028 2173 7a29 0a20 2020 2020    if (!sz).     
0001a20: 2020 2020 2020 2073 7a20 3d20 6765 745f         sz = get_
0001a30: 6465 6372 7970 7465 645f 7369 7a65 2829  decrypted_size()
0001a40: 3b0a 2020 2020 2020 2020 656c 7365 0a20  ;.        else. 
0001a50: 2020 2020 2020 207b 0a20 2020 2020 2020         {.       
0001a60: 2020 2020 2075 696e 7436 345f 7420 6270       uint64_t bp
0001a70: 203d 2067 6574 5f62 7974 6573 5f70 726f   = get_bytes_pro
0001a80: 6365 7373 6564 2829 3b0a 2020 2020 2020  cessed();.      
0001a90: 2020 2020 2020 6774 6b5f 7072 6f67 7265        gtk_progre
0001aa0: 7373 5f62 6172 5f73 6574 5f66 7261 6374  ss_bar_set_fract
0001ab0: 696f 6e28 2847 746b 5072 6f67 7265 7373  ion((GtkProgress
0001ac0: 4261 7220 2a29 6461 7461 2d3e 7072 6f67  Bar *)data->prog
0001ad0: 7265 7373 5f62 6172 2c20 2864 6f75 626c  ress_bar, (doubl
0001ae0: 6529 6270 202f 2028 646f 7562 6c65 2973  e)bp / (double)s
0001af0: 7a29 3b0a 0a20 2020 2020 2020 2020 2020  z);..           
0001b00: 2063 6861 7220 2a70 7267 7320 3d20 4e55   char *prgs = NU
0001b10: 4c4c 3b0a 2020 2020 2020 2020 2020 2020  LL;.            
0001b20: 6173 7072 696e 7466 2826 7072 6773 2c20  asprintf(&prgs, 
0001b30: 2225 6a75 202f 2025 6a75 222c 2062 702c  "%ju / %ju", bp,
0001b40: 2073 7a29 3b0a 2020 2020 2020 2020 2020   sz);.          
0001b50: 2020 6774 6b5f 7072 6f67 7265 7373 5f62    gtk_progress_b
0001b60: 6172 5f73 6574 5f74 6578 7428 2847 746b  ar_set_text((Gtk
0001b70: 5072 6f67 7265 7373 4261 7220 2a29 6461  ProgressBar *)da
0001b80: 7461 2d3e 7072 6f67 7265 7373 5f62 6172  ta->progress_bar
0001b90: 2c20 7072 6773 293b 0a20 2020 2020 2020  , prgs);.       
0001ba0: 2020 2020 2066 7265 6528 7072 6773 293b       free(prgs);
0001bb0: 0a20 2020 2020 2020 207d 0a20 2020 2020  .        }.     
0001bc0: 2020 2073 7461 7475 7320 3d20 6765 745f     status = get_
0001bd0: 7374 6174 7573 2829 3b0a 2020 2020 2020  status();.      
0001be0: 2020 6774 6b5f 6d61 696e 5f69 7465 7261    gtk_main_itera
0001bf0: 7469 6f6e 5f64 6f28 4641 4c53 4529 3b0a  tion_do(FALSE);.
0001c00: 2020 2020 7d0a 2020 2020 7768 696c 6520      }.    while 
0001c10: 2873 7461 7475 7320 3d3d 2052 554e 4e49  (status == RUNNI
0001c20: 4e47 293b 0a0a 0a20 2020 2076 6f69 6420  NG);...    void 
0001c30: 2a72 203d 204e 554c 4c3b 0a20 2020 2070  *r = NULL;.    p
0001c40: 7468 7265 6164 5f6a 6f69 6e28 6267 742c  thread_join(bgt,
0001c50: 2026 7229 3b0a 2020 2020 6d65 6d63 7079   &r);.    memcpy
0001c60: 2826 7374 6174 7573 2c20 722c 2073 697a  (&status, r, siz
0001c70: 656f 6628 2073 7461 7475 7320 2929 3b0a  eof( status ));.
0001c80: 2020 2020 6672 6565 2872 293b 0a20 2020      free(r);.   
0001c90: 206c 6f67 5f6d 6573 7361 6765 284c 4f47   log_message(LOG
0001ca0: 5f44 4542 5547 2c20 2262 6720 7468 7265  _DEBUG, "bg thre
0001cb0: 6164 2066 696e 6973 6865 6420 7769 7468  ad finished with
0001cc0: 2073 7461 7475 7320 2564 222c 2073 7461   status %d", sta
0001cd0: 7475 7329 3b0a 0a20 2020 2063 6861 7220  tus);..    char 
0001ce0: 2a6d 7367 3b0a 2020 2020 7377 6974 6368  *msg;.    switch
0001cf0: 2028 7374 6174 7573 290a 2020 2020 7b0a   (status).    {.
0001d00: 2020 2020 2020 2020 6361 7365 2053 5543          case SUC
0001d10: 4345 4544 4544 3a0a 2020 2020 2020 2020  CEEDED:.        
0001d20: 2020 2020 6774 6b5f 7072 6f67 7265 7373      gtk_progress
0001d30: 5f62 6172 5f73 6574 5f66 7261 6374 696f  _bar_set_fractio
0001d40: 6e28 2847 746b 5072 6f67 7265 7373 4261  n((GtkProgressBa
0001d50: 7220 2a29 6461 7461 2d3e 7072 6f67 7265  r *)data->progre
0001d60: 7373 5f62 6172 2c20 312e 3029 3b0a 2020  ss_bar, 1.0);.  
0001d70: 2020 2020 2020 2020 2020 6d73 6720 3d20            msg = 
0001d80: 2244 6f6e 6522 3b0a 2020 2020 2020 2020  "Done";.        
0001d90: 2020 2020 6272 6561 6b3b 0a20 2020 2020      break;.     
0001da0: 2020 2063 6173 6520 4341 4e43 454c 4c45     case CANCELLE
0001db0: 443a 0a20 2020 2020 2020 2020 2020 206d  D:.            m
0001dc0: 7367 203d 2022 4361 6e63 656c 6c65 6422  sg = "Cancelled"
0001dd0: 3b0a 2020 2020 2020 2020 2020 2020 6272  ;.            br
0001de0: 6561 6b3b 0a20 2020 2020 2020 2064 6566  eak;.        def
0001df0: 6175 6c74 3a0a 2020 2020 2020 2020 2020  ault:.          
0001e00: 2020 6d73 6720 3d20 2246 6169 6c65 6422    msg = "Failed"
0001e10: 3b0a 2020 2020 2020 2020 2020 2020 6272  ;.            br
0001e20: 6561 6b3b 0a20 2020 207d 0a20 2020 2067  eak;.    }.    g
0001e30: 746b 5f70 726f 6772 6573 735f 6261 725f  tk_progress_bar_
0001e40: 7365 745f 7465 7874 2828 4774 6b50 726f  set_text((GtkPro
0001e50: 6772 6573 7342 6172 202a 2964 6174 612d  gressBar *)data-
0001e60: 3e70 726f 6772 6573 735f 6261 722c 206d  >progress_bar, m
0001e70: 7367 293b 3b0a 0a20 2020 2067 746b 5f77  sg);;..    gtk_w
0001e80: 6964 6765 745f 7365 745f 7365 6e73 6974  idget_set_sensit
0001e90: 6976 6528 6461 7461 2d3e 7072 6f67 7265  ive(data->progre
0001ea0: 7373 5f63 616e 6365 6c5f 6275 7474 6f6e  ss_cancel_button
0001eb0: 2c20 4641 4c53 4529 3b0a 2020 2020 6774  , FALSE);.    gt
0001ec0: 6b5f 7769 6467 6574 5f68 6964 6528 6461  k_widget_hide(da
0001ed0: 7461 2d3e 7072 6f67 7265 7373 5f63 616e  ta->progress_can
0001ee0: 6365 6c5f 6275 7474 6f6e 293b 0a20 2020  cel_button);.   
0001ef0: 2067 746b 5f77 6964 6765 745f 7365 745f   gtk_widget_set_
0001f00: 7365 6e73 6974 6976 6528 6461 7461 2d3e  sensitive(data->
0001f10: 7072 6f67 7265 7373 5f63 6c6f 7365 5f62  progress_close_b
0001f20: 7574 746f 6e2c 2054 5255 4529 3b0a 2020  utton, TRUE);.  
0001f30: 2020 6774 6b5f 7769 6467 6574 5f73 686f    gtk_widget_sho
0001f40: 7728 6461 7461 2d3e 7072 6f67 7265 7373  w(data->progress
0001f50: 5f63 6c6f 7365 5f62 7574 746f 6e29 3b0a  _close_button);.
0001f60: 0a20 2020 2072 6574 7572 6e20 5452 5545  .    return TRUE
0001f70: 3b0a 7d0a 0a47 5f4d 4f44 554c 455f 4558  ;.}..G_MODULE_EX
0001f80: 504f 5254 2067 626f 6f6c 6561 6e20 6f6e  PORT gboolean on
0001f90: 5f63 616e 6365 6c5f 6275 7474 6f6e 5f63  _cancel_button_c
0001fa0: 6c69 636b 6564 2847 746b 4275 7474 6f6e  licked(GtkButton
0001fb0: 202a 6275 7474 6f6e 2c20 6774 6b5f 7769   *button, gtk_wi
0001fc0: 6467 6574 735f 7420 2a64 6174 6129 0a7b  dgets_t *data).{
0001fd0: 0a20 2020 206c 6f67 5f6d 6573 7361 6765  .    log_message
0001fe0: 284c 4f47 5f44 4542 5547 2c20 2263 616e  (LOG_DEBUG, "can
0001ff0: 6365 6c20 6261 636b 6772 6f75 6e64 2074  cel background t
0002000: 6872 6561 6422 293b 0a20 2020 2073 746f  hread");.    sto
0002010: 705f 7275 6e6e 696e 6728 293b 0a0a 2020  p_running();..  
0002020: 2020 7265 7475 726e 2054 5255 453b 0a7d    return TRUE;.}
0002030: 0a0a 475f 4d4f 4455 4c45 5f45 5850 4f52  ..G_MODULE_EXPOR
0002040: 5420 6762 6f6f 6c65 616e 206f 6e5f 636c  T gboolean on_cl
0002050: 6f73 655f 6275 7474 6f6e 5f63 6c69 636b  ose_button_click
0002060: 6564 2847 746b 4275 7474 6f6e 202a 6275  ed(GtkButton *bu
0002070: 7474 6f6e 2c20 6774 6b5f 7769 6467 6574  tton, gtk_widget
0002080: 735f 7420 2a64 6174 6129 0a7b 0a20 2020  s_t *data).{.   
0002090: 2067 746b 5f77 6964 6765 745f 6869 6465   gtk_widget_hide
00020a0: 2864 6174 612d 3e70 726f 6772 6573 735f  (data->progress_
00020b0: 6469 616c 6f67 293b 0a0a 2020 2020 7265  dialog);..    re
00020c0: 7475 726e 2054 5255 453b 0a7d 0a0a 7374  turn TRUE;.}..st
00020d0: 6174 6963 2076 6f69 6420 2a62 675f 7468  atic void *bg_th
00020e0: 7265 6164 5f67 7569 2876 6f69 6420 2a6e  read_gui(void *n
00020f0: 290a 7b0a 2020 2020 2f2a 0a20 2020 2020  ).{.    /*.     
0002100: 2a20 544f 444f 2061 6464 2065 7272 6f72  * TODO add error
0002110: 2063 6865 636b 696e 672f 7265 706f 7274   checking/report
0002120: 696e 6720 666f 7220 6669 6c65 2061 6363  ing for file acc
0002130: 6573 730a 2020 2020 202a 2f0a 2020 2020  ess.     */.    
0002140: 6774 6b5f 7769 6467 6574 735f 7420 2a64  gtk_widgets_t *d
0002150: 6174 6120 3d20 2867 746b 5f77 6964 6765  ata = (gtk_widge
0002160: 7473 5f74 202a 296e 3b0a 0a20 2020 2063  ts_t *)n;..    c
0002170: 6861 7220 2a66 6e61 6d65 203d 2067 746b  har *fname = gtk
0002180: 5f66 696c 655f 6368 6f6f 7365 725f 6765  _file_chooser_ge
0002190: 745f 6669 6c65 6e61 6d65 2828 4774 6b46  t_filename((GtkF
00021a0: 696c 6543 686f 6f73 6572 202a 2964 6174  ileChooser *)dat
00021b0: 612d 3e66 696c 655f 6368 6f6f 7365 7229  a->file_chooser)
00021c0: 3b0a 2020 2020 696e 7436 345f 7420 736f  ;.    int64_t so
00021d0: 7572 6365 203d 206f 7065 6e28 666e 616d  urce = open(fnam
00021e0: 652c 204f 5f52 444f 4e4c 5920 7c20 4f5f  e, O_RDONLY | O_
00021f0: 4249 4e41 5259 207c 2046 5f52 444c 434b  BINARY | F_RDLCK
0002200: 2c20 535f 4952 5553 5220 7c20 535f 4957  , S_IRUSR | S_IW
0002210: 5553 5229 3b0a 0a20 2020 2063 6861 7220  USR);..    char 
0002220: 2a6f 6469 7220 3d20 6774 6b5f 6669 6c65  *odir = gtk_file
0002230: 5f63 686f 6f73 6572 5f67 6574 5f66 696c  _chooser_get_fil
0002240: 656e 616d 6528 2847 746b 4669 6c65 4368  ename((GtkFileCh
0002250: 6f6f 7365 7220 2a29 6461 7461 2d3e 6f75  ooser *)data->ou
0002260: 745f 6669 6c65 5f63 686f 6f73 6572 293b  t_file_chooser);
0002270: 0a20 2020 2063 6861 7220 2a6f 6e61 6d65  .    char *oname
0002280: 203d 2028 6368 6172 202a 2967 746b 5f65   = (char *)gtk_e
0002290: 6e74 7279 5f67 6574 5f74 6578 7428 2847  ntry_get_text((G
00022a0: 746b 456e 7472 7920 2a29 6461 7461 2d3e  tkEntry *)data->
00022b0: 6f75 745f 6669 6c65 5f65 6e74 7279 293b  out_file_entry);
00022c0: 0a20 2020 2063 6861 7220 2a6f 7574 5f66  .    char *out_f
00022d0: 696c 6520 3d20 4e55 4c4c 3b0a 2020 2020  ile = NULL;.    
00022e0: 6173 7072 696e 7466 2826 6f75 745f 6669  asprintf(&out_fi
00022f0: 6c65 2c20 2225 732f 2573 222c 206f 6469  le, "%s/%s", odi
0002300: 722c 206f 6e61 6d65 293b 0a0a 2020 2020  r, oname);..    
0002310: 696e 7436 345f 7420 6f75 7470 7574 203d  int64_t output =
0002320: 206f 7065 6e28 6f75 745f 6669 6c65 2c20   open(out_file, 
0002330: 4f5f 4352 4541 5420 7c20 4f5f 5452 554e  O_CREAT | O_TRUN
0002340: 4320 7c20 4f5f 5752 4f4e 4c59 207c 204f  C | O_WRONLY | O
0002350: 5f42 494e 4152 5920 7c20 465f 5752 4c43  _BINARY | F_WRLC
0002360: 4b2c 2053 5f49 5255 5352 207c 2053 5f49  K, S_IRUSR | S_I
0002370: 5755 5352 293b 0a0a 2020 2020 7374 6174  WUSR);..    stat
0002380: 7573 5f65 2073 7461 7475 7320 3d20 5355  us_e status = SU
0002390: 4343 4545 4445 443b 0a20 2020 2076 6f69  CCEEDED;.    voi
00023a0: 6420 2a72 203d 2063 616c 6c6f 6328 312c  d *r = calloc(1,
00023b0: 2073 697a 656f 6628 2073 7461 7475 7320   sizeof( status 
00023c0: 2929 3b0a 0a20 2020 2069 6e74 206b 6579  ));..    int key
00023d0: 5f74 7970 6520 3d20 6774 6b5f 636f 6d62  _type = gtk_comb
00023e0: 6f5f 626f 785f 6765 745f 6163 7469 7665  o_box_get_active
00023f0: 2828 4774 6b43 6f6d 626f 426f 7820 2a29  ((GtkComboBox *)
0002400: 6461 7461 2d3e 6b65 795f 636f 6d62 6f29  data->key_combo)
0002410: 3b0a 2020 2020 7261 775f 6b65 795f 7420  ;.    raw_key_t 
0002420: 6b65 7920 3d20 7b4e 554c 4c2c 2030 2c20  key = {NULL, 0, 
0002430: 4e55 4c4c 2c20 307d 3b0a 2020 2020 7377  NULL, 0};.    sw
0002440: 6974 6368 2028 6b65 795f 7479 7065 290a  itch (key_type).
0002450: 2020 2020 7b0a 2020 2020 2020 2020 6361      {.        ca
0002460: 7365 204b 4559 4649 4c45 3a0a 2020 2020  se KEYFILE:.    
0002470: 2020 2020 2020 2020 7b0a 2020 2020 2020          {.      
0002480: 2020 2020 2020 2020 2020 696e 7436 345f            int64_
0002490: 7420 6b66 203d 206f 7065 6e28 6774 6b5f  t kf = open(gtk_
00024a0: 6669 6c65 5f63 686f 6f73 6572 5f67 6574  file_chooser_get
00024b0: 5f66 696c 656e 616d 6528 2847 746b 4669  _filename((GtkFi
00024c0: 6c65 4368 6f6f 7365 7220 2a29 6461 7461  leChooser *)data
00024d0: 2d3e 6b65 795f 6368 6f6f 7365 7229 2c20  ->key_chooser), 
00024e0: 4f5f 5244 4f4e 4c59 207c 204f 5f42 494e  O_RDONLY | O_BIN
00024f0: 4152 5920 7c20 465f 5244 4c43 4b2c 2053  ARY | F_RDLCK, S
0002500: 5f49 5255 5352 207c 2053 5f49 5755 5352  _IRUSR | S_IWUSR
0002510: 293b 0a20 2020 2020 2020 2020 2020 2020  );.             
0002520: 2020 2069 6620 286b 6620 3c20 3029 0a20     if (kf < 0). 
0002530: 2020 2020 2020 2020 2020 2020 2020 207b                 {
0002540: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0002550: 2020 2020 2073 7461 7475 7320 3d20 4641       status = FA
0002560: 494c 4544 5f49 4e49 5449 414c 4953 4154  ILED_INITIALISAT
0002570: 494f 4e3b 0a20 2020 2020 2020 2020 2020  ION;.           
0002580: 2020 2020 2020 2020 206d 656d 6370 7928           memcpy(
0002590: 722c 2026 7374 6174 7573 2c20 7369 7a65  r, &status, size
00025a0: 6f66 2820 7374 6174 7573 2029 293b 0a20  of( status ));. 
00025b0: 2020 2020 2020 2020 2020 2020 2020 2020                  
00025c0: 2020 2070 7468 7265 6164 5f65 7869 7428     pthread_exit(
00025d0: 7229 3b0a 2020 2020 2020 2020 2020 2020  r);.            
00025e0: 2020 2020 2020 2020 7265 7475 726e 204e          return N
00025f0: 554c 4c3b 0a20 2020 2020 2020 2020 2020  ULL;.           
0002600: 2020 2020 207d 0a20 2020 2020 2020 2020       }.         
0002610: 2020 2020 2020 206b 6579 2e70 5f6c 656e         key.p_len
0002620: 6774 6820 3d20 6c73 6565 6b28 6b66 2c20  gth = lseek(kf, 
0002630: 302c 2053 4545 4b5f 454e 4429 3b0a 2020  0, SEEK_END);.  
0002640: 2020 2020 2020 2020 2020 2020 2020 6b65                ke
0002650: 792e 705f 6461 7461 203d 206d 616c 6c6f  y.p_data = mallo
0002660: 6328 6b65 792e 705f 6c65 6e67 7468 293b  c(key.p_length);
0002670: 0a20 2020 2020 2020 2020 2020 2020 2020  .               
0002680: 2069 6620 2821 6b65 792e 705f 6461 7461   if (!key.p_data
0002690: 290a 2020 2020 2020 2020 2020 2020 2020  ).              
00026a0: 2020 2020 2020 6469 6528 5f28 226f 7574        die(_("out
00026b0: 206f 6620 6d65 6d6f 7279 2040 2025 733a   of memory @ %s:
00026c0: 2569 2229 2c20 5f5f 4649 4c45 5f5f 2c20  %i"), __FILE__, 
00026d0: 5f5f 4c49 4e45 5f5f 293b 0a20 2020 2020  __LINE__);.     
00026e0: 2020 2020 2020 2020 2020 2070 7265 6164             pread
00026f0: 286b 662c 206b 6579 2e70 5f64 6174 612c  (kf, key.p_data,
0002700: 206b 6579 2e70 5f6c 656e 6774 682c 2030   key.p_length, 0
0002710: 293b 0a20 2020 2020 2020 2020 2020 2020  );.             
0002720: 2020 2063 6c6f 7365 286b 6629 3b0a 2020     close(kf);.  
0002730: 2020 2020 2020 2020 2020 7d0a 2020 2020            }.    
0002740: 2020 2020 2020 2020 6272 6561 6b3b 0a0a          break;..
0002750: 2020 2020 2020 2020 6361 7365 2050 4153          case PAS
0002760: 5357 4f52 443a 0a20 2020 2020 2020 2020  SWORD:.         
0002770: 2020 206b 6579 2e70 5f64 6174 6120 3d20     key.p_data = 
0002780: 2875 696e 7438 5f74 202a 2967 746b 5f65  (uint8_t *)gtk_e
0002790: 6e74 7279 5f67 6574 5f74 6578 7428 2847  ntry_get_text((G
00027a0: 746b 456e 7472 7920 2a29 6461 7461 2d3e  tkEntry *)data->
00027b0: 7061 7373 776f 7264 5f65 6e74 7279 293b  password_entry);
00027c0: 0a20 2020 2020 2020 2020 2020 206b 6579  .            key
00027d0: 2e70 5f6c 656e 6774 6820 3d20 7374 726c  .p_length = strl
00027e0: 656e 2828 6368 6172 202a 296b 6579 2e70  en((char *)key.p
00027f0: 5f64 6174 6129 3b0a 2020 2020 2020 2020  _data);.        
0002800: 2020 2020 6272 6561 6b3b 0a20 2020 207d      break;.    }
0002810: 0a0a 2020 2020 6966 2028 656e 6372 7970  ..    if (encryp
0002820: 7469 6e67 290a 2020 2020 7b0a 2020 2020  ting).    {.    
0002830: 2020 2020 696e 7420 6320 3d20 6774 6b5f      int c = gtk_
0002840: 636f 6d62 6f5f 626f 785f 6765 745f 6163  combo_box_get_ac
0002850: 7469 7665 2828 4774 6b43 6f6d 626f 426f  tive((GtkComboBo
0002860: 7820 2a29 6461 7461 2d3e 6372 7970 746f  x *)data->crypto
0002870: 5f63 6f6d 626f 293b 0a20 2020 2020 2020  _combo);.       
0002880: 2069 6e74 2068 203d 2067 746b 5f63 6f6d   int h = gtk_com
0002890: 626f 5f62 6f78 5f67 6574 5f61 6374 6976  bo_box_get_activ
00028a0: 6528 2847 746b 436f 6d62 6f42 6f78 202a  e((GtkComboBox *
00028b0: 2964 6174 612d 3e68 6173 685f 636f 6d62  )data->hash_comb
00028c0: 6f29 3b0a 2020 2020 2020 2020 6c69 7374  o);.        list
00028d0: 5f74 202a 6369 7068 6572 7320 3d20 6765  _t *ciphers = ge
00028e0: 745f 616c 676f 7269 7468 6d73 5f63 7279  t_algorithms_cry
00028f0: 7074 2829 3b0a 2020 2020 2020 2020 6c69  pt();.        li
0002900: 7374 5f74 202a 6861 7368 6573 203d 2067  st_t *hashes = g
0002910: 6574 5f61 6c67 6f72 6974 686d 735f 6861  et_algorithms_ha
0002920: 7368 2829 3b0a 2020 2020 2020 2020 6368  sh();.        ch
0002930: 6172 202a 6369 7068 6572 203d 206c 6973  ar *cipher = lis
0002940: 745f 6765 7428 6369 7068 6572 732c 2063  t_get(ciphers, c
0002950: 202d 2031 293b 202f 2a20 7375 6274 7261   - 1); /* subtra
0002960: 6374 2031 2074 6f20 6765 7420 616c 676f  ct 1 to get algo
0002970: 7269 7468 6d20 6f66 6673 6574 2066 726f  rithm offset fro
0002980: 6d20 636f 6d62 6f62 6f78 202a 2f0a 2020  m combobox */.  
0002990: 2020 2020 2020 6368 6172 202a 6861 7368        char *hash
00029a0: 203d 206c 6973 745f 6765 7428 6861 7368   = list_get(hash
00029b0: 6573 2c20 6820 2d20 3129 3b20 2020 202f  es, h - 1);    /
00029c0: 2a20 636f 6d62 6f62 6f78 2069 7465 6d20  * combobox item 
00029d0: 3020 6973 2074 6865 2027 7365 6c65 6374  0 is the 'select
00029e0: 2e2e 2e27 2074 6578 7420 2a2f 0a20 2020  ...' text */.   
00029f0: 2020 2020 2073 7461 7475 7320 3d20 6d61       status = ma
0002a00: 696e 5f65 6e63 7279 7074 2873 6f75 7263  in_encrypt(sourc
0002a10: 652c 206f 7574 7075 742c 2026 6b65 792c  e, output, &key,
0002a20: 2068 6173 682c 2063 6970 6865 7229 3b0a   hash, cipher);.
0002a30: 2020 2020 2020 2020 6c69 7374 5f64 656c          list_del
0002a40: 6574 6528 2663 6970 6865 7273 293b 0a20  ete(&ciphers);. 
0002a50: 2020 2020 2020 206c 6973 745f 6465 6c65         list_dele
0002a60: 7465 2826 6861 7368 6573 293b 0a20 2020  te(&hashes);.   
0002a70: 207d 0a20 2020 2065 6c73 650a 2020 2020   }.    else.    
0002a80: 2020 2020 7374 6174 7573 203d 206d 6169      status = mai
0002a90: 6e5f 6465 6372 7970 7428 736f 7572 6365  n_decrypt(source
0002aa0: 2c20 6f75 7470 7574 2c20 266b 6579 293b  , output, &key);
0002ab0: 0a0a 2020 2020 636c 6f73 6528 736f 7572  ..    close(sour
0002ac0: 6365 293b 0a20 2020 2063 6c6f 7365 286f  ce);.    close(o
0002ad0: 7574 7075 7429 3b0a 0a20 2020 206d 656d  utput);..    mem
0002ae0: 6370 7928 722c 2026 7374 6174 7573 2c20  cpy(r, &status, 
0002af0: 7369 7a65 6f66 2820 7374 6174 7573 2029  sizeof( status )
0002b00: 293b 0a20 2020 2070 7468 7265 6164 5f65  );.    pthread_e
0002b10: 7869 7428 7229 3b0a 0a20 2020 2072 6574  xit(r);..    ret
0002b20: 7572 6e20 723b 0a7d 0a0a 475f 4d4f 4455  urn r;.}..G_MODU
0002b30: 4c45 5f45 5850 4f52 5420 6762 6f6f 6c65  LE_EXPORT gboole
0002b40: 616e 206f 6e5f 6162 6f75 745f 6f70 656e  an on_about_open
0002b50: 2847 746b 5769 6467 6574 202a 7769 6467  (GtkWidget *widg
0002b60: 6574 2c20 6774 6b5f 7769 6467 6574 735f  et, gtk_widgets_
0002b70: 7420 2a64 6174 6129 0a7b 0a20 2020 2067  t *data).{.    g
0002b80: 746b 5f64 6961 6c6f 675f 7275 6e28 2847  tk_dialog_run((G
0002b90: 746b 4469 616c 6f67 202a 2964 6174 612d  tkDialog *)data-
0002ba0: 3e61 626f 7574 5f64 6961 6c6f 6729 3b0a  >about_dialog);.
0002bb0: 2020 2020 6774 6b5f 7769 6467 6574 5f68      gtk_widget_h
0002bc0: 6964 6528 6461 7461 2d3e 6162 6f75 745f  ide(data->about_
0002bd0: 6469 616c 6f67 293b 0a0a 2020 2020 7265  dialog);..    re
0002be0: 7475 726e 2054 5255 453b 0a7d 0a0a 7374  turn TRUE;.}..st
0002bf0: 6174 6963 2076 6f69 6420 6368 6563 6b5f  atic void check_
0002c00: 656e 6162 6c65 5f65 6e63 7279 7074 5f62  enable_encrypt_b
0002c10: 7574 746f 6e28 6774 6b5f 7769 6467 6574  utton(gtk_widget
0002c20: 735f 7420 2a64 6174 6129 0a7b 0a20 2020  s_t *data).{.   
0002c30: 2069 6e74 2063 6970 6865 7220 3d20 656e   int cipher = en
0002c40: 6372 7970 7469 6e67 203f 2067 746b 5f63  crypting ? gtk_c
0002c50: 6f6d 626f 5f62 6f78 5f67 6574 5f61 6374  ombo_box_get_act
0002c60: 6976 6528 2847 746b 436f 6d62 6f42 6f78  ive((GtkComboBox
0002c70: 202a 2964 6174 612d 3e63 7279 7074 6f5f   *)data->crypto_
0002c80: 636f 6d62 6f29 203a 202d 313b 0a20 2020  combo) : -1;.   
0002c90: 2069 6e74 2068 6173 6820 3d20 656e 6372   int hash = encr
0002ca0: 7970 7469 6e67 203f 2067 746b 5f63 6f6d  ypting ? gtk_com
0002cb0: 626f 5f62 6f78 5f67 6574 5f61 6374 6976  bo_box_get_activ
0002cc0: 6528 2847 746b 436f 6d62 6f42 6f78 202a  e((GtkComboBox *
0002cd0: 2964 6174 612d 3e68 6173 685f 636f 6d62  )data->hash_comb
0002ce0: 6f29 203a 202d 313b 0a0a 2020 2020 696e  o) : -1;..    in
0002cf0: 7420 6b65 7920 3d20 6774 6b5f 636f 6d62  t key = gtk_comb
0002d00: 6f5f 626f 785f 6765 745f 6163 7469 7665  o_box_get_active
0002d10: 2828 4774 6b43 6f6d 626f 426f 7820 2a29  ((GtkComboBox *)
0002d20: 6461 7461 2d3e 6b65 795f 636f 6d62 6f29  data->key_combo)
0002d30: 3b0a 2020 2020 6368 6172 202a 6b65 795f  ;.    char *key_
0002d40: 6461 7461 203d 204e 554c 4c3b 0a20 2020  data = NULL;.   
0002d50: 2073 7769 7463 6820 286b 6579 290a 2020   switch (key).  
0002d60: 2020 7b0a 2020 2020 2020 2020 6361 7365    {.        case
0002d70: 204b 4559 4649 4c45 3a0a 2020 2020 2020   KEYFILE:.      
0002d80: 2020 2020 2020 6b65 795f 6461 7461 203d        key_data =
0002d90: 2067 746b 5f66 696c 655f 6368 6f6f 7365   gtk_file_choose
0002da0: 725f 6765 745f 6669 6c65 6e61 6d65 2828  r_get_filename((
0002db0: 4774 6b46 696c 6543 686f 6f73 6572 202a  GtkFileChooser *
0002dc0: 2964 6174 612d 3e6b 6579 5f63 686f 6f73  )data->key_choos
0002dd0: 6572 293b 0a20 2020 2020 2020 2020 2020  er);.           
0002de0: 2062 7265 616b 3b0a 2020 2020 2020 2020   break;.        
0002df0: 6361 7365 2050 4153 5357 4f52 443a 0a20  case PASSWORD:. 
0002e00: 2020 2020 2020 2020 2020 206b 6579 5f64             key_d
0002e10: 6174 6120 3d20 2863 6861 7220 2a29 6774  ata = (char *)gt
0002e20: 6b5f 656e 7472 795f 6765 745f 7465 7874  k_entry_get_text
0002e30: 2828 4774 6b45 6e74 7279 202a 2964 6174  ((GtkEntry *)dat
0002e40: 612d 3e70 6173 7377 6f72 645f 656e 7472  a->password_entr
0002e50: 7929 3b0a 2020 2020 2020 2020 2020 2020  y);.            
0002e60: 6272 6561 6b3b 0a20 2020 207d 0a0a 2020  break;.    }..  
0002e70: 2020 6966 2028 6369 7068 6572 2021 3d20    if (cipher != 
0002e80: 3020 2626 2068 6173 6820 213d 2030 2026  0 && hash != 0 &
0002e90: 2620 6b65 7920 2626 206b 6579 5f64 6174  & key && key_dat
0002ea0: 6120 2626 2073 7472 6c65 6e28 6b65 795f  a && strlen(key_
0002eb0: 6461 7461 2929 0a20 2020 207b 0a20 2020  data)).    {.   
0002ec0: 2020 2020 2067 746b 5f77 6964 6765 745f       gtk_widget_
0002ed0: 7365 745f 7365 6e73 6974 6976 6528 6461  set_sensitive(da
0002ee0: 7461 2d3e 656e 6372 7970 745f 6275 7474  ta->encrypt_butt
0002ef0: 6f6e 2c20 5452 5545 293b 0a20 2020 2020  on, TRUE);.     
0002f00: 2020 2067 746b 5f77 6964 6765 745f 6772     gtk_widget_gr
0002f10: 6162 5f64 6566 6175 6c74 2864 6174 612d  ab_default(data-
0002f20: 3e65 6e63 7279 7074 5f62 7574 746f 6e29  >encrypt_button)
0002f30: 3b0a 2020 2020 7d0a 2020 2020 656c 7365  ;.    }.    else
0002f40: 0a20 2020 2020 2020 2067 746b 5f77 6964  .        gtk_wid
0002f50: 6765 745f 7365 745f 7365 6e73 6974 6976  get_set_sensitiv
0002f60: 6528 6461 7461 2d3e 656e 6372 7970 745f  e(data->encrypt_
0002f70: 6275 7474 6f6e 2c20 4641 4c53 4529 3b0a  button, FALSE);.
0002f80: 2020 2020 7265 7475 726e 3b0a 7d0a           return;.}.
